---
import BackToPrev from "@components/BackToPrev.astro";
import Container from "@components/Container.astro";
import Link from "@components/Link.astro";
import PageLayout from "@layouts/PageLayout.astro";
import { readingTime } from "@lib/utils";
import { type CollectionEntry, getCollection } from "astro:content";
import { sortProjectEntries } from "./_page-helpers";

export async function getStaticPaths() {
  const projects = (await getCollection("projects"))
    .filter((post) => !post.data.draft)
    .sort(sortProjectEntries);
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: project,
  }));
}

type Props = CollectionEntry<"projects">;

const project = Astro.props;

const { Content } = await project.render();
---

<PageLayout title={project.data.title} description={project.data.description}>
  <Container>
    <div class="animate">
      <BackToPrev href="/projects"> Back to projects </BackToPrev>
    </div>
    <div class="my-10 space-y-1">
      <div class="animate flex items-center gap-1.5">
        <div class="font-base text-sm">
          {readingTime(project.body)}
        </div>
      </div>
      <div class="animate text-2xl font-semibold text-black dark:text-white">
        {project.data.title}
      </div>
      {
        (project.data.demo.available || project.data.repo.public) && (
          <nav class="animate flex gap-1">
            {project.data.demo.available && (
              <Link href={project.data.demo.url} external>
                demo
              </Link>
            )}
            {project.data.demo.available && project.data.repo.public && (
              <span>/</span>
            )}
            {project.data.repo.public && (
              <Link href={project.data.repo.url} external>
                repo
              </Link>
            )}
          </nav>
        )
      }
    </div>
    <article class="animate">
      <Content />
    </article>
  </Container>
</PageLayout>
